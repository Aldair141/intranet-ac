@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="nav navbar-nav navbar-right">
    @if (SignInManager.IsSignedIn(User))
    {
        @* <li class="nav-item">
    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name!</a>
    </li>
    <li class="nav-item">
    <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
    <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
    </form>
    </li>*@
    }
    else
    {
        @*
    <li class="nav-item">
    <i class="material-icons" asp-area="Identity" asp-page="/Account/Register">person_add</i> Register
    <a class="nav-link " asp-area="Identity" asp-page="/Account/Register"></a>
    </li>
    <li class="nav-item">
    <a class="nav-link " asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>*@

        <li class="">
            <a asp-area="Identity" asp-page="/Account/Register"> <i class="material-icons">person_add</i>Register</a>
        </li>
        <li class="">
            <a asp-area="Identity" asp-page="/Account/Login"><i class="material-icons">fingerprint</i>Login</a>
        </li>
    }
</ul>
